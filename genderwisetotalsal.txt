package F22;



import java.io.IOException;
import java.util.StringTokenizer;
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.mapreduce.Mapper;
import org.apache.hadoop.mapreduce.Reducer;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat;
import org.apache.hadoop.mapreduce.lib.output.FileOutputFormat;
import org.apache.hadoop.util.GenericOptionsParser;

public class F222
{
public static class MapForWordCount extends Mapper<LongWritable, Text, Text, IntWritable>
{
	   public void map(LongWritable key, Text value, Context con) throws IOException, InterruptedException
	   {
		   String line = value.toString(); 
			String[] line1=line.split(",");
			String gender=line1[3];
			Text outputKey = new Text(gender);
			int salary=Integer.parseInt(line1[2]);
			IntWritable outputValue = new IntWritable(salary);
			con.write(outputKey, outputValue);
		  
		} // end of map()
} //end of Mapper Class



public static class ReduceForWordCount extends Reducer<Text, IntWritable, Text, IntWritable>
{
	  public void reduce(Text word, Iterable<IntWritable> values, Context con) throws IOException, InterruptedException
	  {

		   int sum = 0;

		   for(IntWritable value : values)
		   {
			   sum += value.get();
		   }

		   con.write(word, new IntWritable(sum));

	  } // end of reduce()
} // end of Reducer class

// job definition

public static void  main(String[] args) throws Exception
{

	   Configuration c = new Configuration();
	   String[] files = new GenericOptionsParser(c, args).getRemainingArgs();
	   Path input = new Path(files[0]);
	   Path output = new Path(files[1]);
	   Job j = new Job(c, "GenderWiseTotalSalary");
	   j.setJarByClass(F222.class);
	   j.setMapperClass(MapForWordCount.class);
	   j.setReducerClass(ReduceForWordCount.class);
	   j.setOutputKeyClass(Text.class);
	   j.setOutputValueClass(IntWritable.class);
	   FileInputFormat.addInputPath(j, input);
	   FileOutputFormat.setOutputPath(j, output);
	   System.exit(j.waitForCompletion(true) ? 0:1);

} // end of main()

} //end of main class


Inputf2
1,a,1000,F
2,b,2000,M
3,c,3000,F
4,d,4000,M

Outputf2
F	4000
M	6000

